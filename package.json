{
    "name": "vscode-tsplang-preview",
    "displayName": "TSPLang",
    "description": "Keithley Instruments TSPÂ® language extension for Visual Studio Code",
    "version": "1.0.0",
    "preview": true,
    "publisher": "tektronix",
    "license": "Apache-2.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/tektronix/vscode-tsplang/tree/dev"
    },
    "bugs": {
        "url": "https://github.com/tektronix/vscode-tsplang/issues"
    },
    "qna": "https://github.com/tektronix/vscode-tsplang/issues",
    "badges": [
        {
            "url": "https://travis-ci.com/tektronix/vscode-tsplang.svg?branch=dev",
            "href": "https://travis-ci.com/tektronix/vscode-tsplang",
            "description": "Continuous Integration (Travis-CI)"
        },
        {
            "url": "https://codecov.io/gh/tektronix/vscode-tsplang/branch/dev/graph/badge.svg",
            "href": "https://codecov.io/gh/tektronix/vscode-tsplang",
            "description": "Test Coverage (Codecov)"
        }
    ],
    "engines": {
        "vscode": "^1.38.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onLanguage:tsp"
    ],
    "main": "./client/out/extension",
    "contributes": {
        "commands": [
            {
                "command": "tsplang.parse",
                "title": "Parse Document"
            }
        ],
        "configuration": {
            "title": "TSPLang",
            "properties": {
                "tsplang.debug.open.documentInitializationDelay": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "default": null,
                    "description": "Number of seconds to delay initializing a newly opened document.\nAllows the debugger time to attach before resuming execution.",
                    "scope": "resource"
                },
                "tsplang.debug.outline": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show all parsed statements in the Outline view.\nStatements that are usually hidden (for loops, if statements, returns, etc.) will be displayed as the File type.",
                    "scope": "resource"
                },
                "tsplang.debug.print.documentChangeEvents": {
                    "type": "boolean",
                    "default": false,
                    "description": "Print all document change events.",
                    "scope": "resource"
                },
                "tsplang.debug.print.rootStatementParseTime": {
                    "type": "boolean",
                    "default": false,
                    "description": "Print the parse time of each root statement.",
                    "scope": "resource"
                },
                "tsplang.debug.print.rootStatementParseTree": {
                    "type": "boolean",
                    "default": false,
                    "description": "Print a formatted parse tree of each root statement.",
                    "scope": "resource"
                },
                "tsplang.outline.showInstrumentSettings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show instrument setting assignments in the Outline view.",
                    "scope": "resource"
                },
                "tsplang.suggestions.enumerationOrder": {
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom",
                        "inline"
                    ],
                    "default": "inline",
                    "description": "Controls how enumeration suggestions are sorted.",
                    "enumDescriptions": [
                        "Show enumeration suggestions above other suggestions.",
                        "Show enumeration suggestions below other suggestions.",
                        "Show enumeration suggestions with other suggestions."
                    ],
                    "scope": "resource"
                },
                "tsplang.suggestions.hideInputEnumerations": {
                    "type": "boolean",
                    "default": false,
                    "description": "Hide enumerations that are only used as input values until they become contextually relevant.",
                    "scope": "resource"
                }
            }
        },
        "languages": [
            {
                "id": "tsp",
                "aliases": [
                    "TSP",
                    "tsp"
                ],
                "extensions": [
                    ".tsp",
                    ".tspa"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "tsp",
                "scopeName": "source.lua",
                "path": "./third_party/syntaxes/Lua.plist"
            }
        ]
    },
    "devDependencies": {
        "@types/chai": "latest",
        "@types/mocha": "latest",
        "@types/node": "^7.10.7",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "chai": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jsdoc": "^15.10.0",
        "eslint-plugin-prettier": "^3.1.1",
        "mocha": "latest",
        "mocha-typescript": "latest",
        "nyc": "latest",
        "prettier": "1.18.2",
        "source-map-support": "latest",
        "ts-node": "^7.0.1",
        "typescript": "^3.6.4"
    },
    "scripts": {
        "compile": "tsc -b",
        "eslint-check": "eslint --ext .ts --print-config client/src/extension.ts | eslint-config-prettier-check",
        "format": "npm run format:client && npm run format:server",
        "format:client": "eslint --ext .js,.ts --fix client",
        "format:server": "eslint --ext .js,.ts --fix server",
        "lint": "npm run lint:client && npm run lint:server",
        "lint:client": "eslint --ext .js,.ts client",
        "lint:server": "eslint --ext .js,.ts server",
        "prepackage": "npm run compile && npm run test",
        "package": "vsce package",
        "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
        "test": "npm run lint -s & mocha --opts server/mocha.opts",
        "test:coverage": "nyc mocha --opts server/mocha.opts",
        "test:mocha": "mocha --bail --full-trace --opts server/mocha.opts",
        "watch": "tsc -b -w"
    }
}
